#!/usr/bin/env bash

## PURPOSE: entrypoint for golang setup

## REF: https://golang.org/doc/install/gccgo
## REF: https://golang.org/doc/install/source
## REF: https://github.com/canha/golang-tools-install-script/blob/master/goinstall.sh

set -e

WORKSPACE=${WORKSPACE:?required}

GO_VERSION=${GO_VERSION:$1}
GO_VERSION=${GO_VERSION:?required}

GOROOT=$WORKSPACE/lib/golang/go-$GO_VERSION
GOPATH=$WORKSPACE/src/go-$GO_VERSION

OS="$(uname -s)"
ARCH="$(uname -m)"

case $OS in
    "Linux")
        case $ARCH in
        "x86_64")
            ARCH=amd64
            ;;
        "aarch64")
            ARCH=arm64
            ;;
        "armv6" | "armv7l")
            ARCH=armv6l
            ;;
        "armv8")
            ARCH=arm64
            ;;
        .*386.*)
            ARCH=386
            ;;
        esac
        PLATFORM="linux-$ARCH"
    ;;
    "Darwin")
        PLATFORM="darwin-amd64"
    ;;
esac

if [ -z "$PLATFORM" ]; then
    echo "Your operating system is not supported by the script."
    return 1
fi

PACKAGE_NAME="go$GO_VERSION.$PLATFORM.tar.gz"
TEMP_DIRECTORY=$(mktemp -d)

echo "... downloading $PACKAGE_NAME"
if hash wget 2>/dev/null; then
    wget https://storage.googleapis.com/golang/$PACKAGE_NAME -O "$TEMP_DIRECTORY/go.tar.gz"
else
    curl -o "$TEMP_DIRECTORY/go.tar.gz" https://storage.googleapis.com/golang/$PACKAGE_NAME
fi

echo "... extracting $PACKAGE_NAME"
mkdir -p "$GOROOT"

tar -C "$GOROOT" --strip-components=1 -xzf "$TEMP_DIRECTORY/go.tar.gz"

echo "... creating environment variables in workspace"
    {
        echo "GOROOT=${GOROOT}"
        echo '[ -d "${GOROOT}" ] && ( echo $PATH | grep $GOROOT/bin &>/dev/null ) || PATH=$GOROOT/bin:$PATH'
        echo "GOPATH=$GOPATH"
	echo '[ -d "${GOPATH}" ] && ( echo $PATH | grep $GOPATH/bin &>/dev/null ) || PATH=$GOPATH/bin:$PATH'
    } >> "$WORKSPACE/lib/shell/$(basename $SHELL)/environment/go-$GO_VERSION"

mkdir -p "${GOPATH}/"{src,pkg,bin}

rm -f "$TEMP_DIRECTORY/go.tar.gz"

. "$WORKSPACE/lib/shell/$(basename $SHELL)/environment/go-$GO_VERSION"

env | grep ^GO
